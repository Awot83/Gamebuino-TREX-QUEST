//imports the SPI library (needed to communicate with Gamebuino's screen)
#include <SPI.h>
//imports the Gamebuino library
#include <Gamebuino.h>
//creates a Gamebuino object named gb
Gamebuino gb;
int x = 10;
int y = 10;
int pomx = 30; // apple x position
int tankx = 0; // tank x pos
int tanky = 20; // tank y pos
int pomy = 30;  // appel Y pos
int direc = 0;
int statefire = 0;
int tankstate = 0;
int explode = 0;  // is tank exploded ?
int puissance = 11;    // power bar status
int barredevie = 42; // life bar status
int score = 0;
int chilyrand = 0; // randomized 1/10 to have a chily instead of apple
int activateRay=0; // used to know if chily is eaten to activate the ray
int RayOrFireHitBox=16;  // used for the width of hitbox of the fire =16 or Ray= 88
int leveln=0;  // level counter
int SpeedUp=1; // speed multiplicateur

const byte GAMEOVER[] PROGMEM = {64,36,
B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111110,
B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000010,
B10000000,B01110000,B10000000,B00111000,B00001110,B01000101,B11011100,B00000010,
B10000000,B10000001,B01000101,B00100000,B00010001,B01000101,B00010010,B00000010,
B10001000,B10000011,B11001010,B10110000,B00010101,B01000101,B10011110,B00100010,
B10011100,B10011010,B00101000,B10100000,B00010101,B00101001,B00010100,B01110010,
B10001000,B10001010,B00101000,B10100000,B00010001,B00111001,B00010010,B00100010,
B10000000,B11111010,B00101000,B10111000,B00001110,B00010001,B11010010,B00000010,
B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000010,
B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000010,
B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111110,
B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000001,B11100000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00000110,B00011000,B00000000,B00000000,B00000000,B00000000,
B01110110,B01110110,B11000101,B00001000,B00000000,B00000000,B00000001,B11111100,
B01010101,B01100100,B10001001,B11000100,B00000000,B00000000,B00000001,B11111100,
B01110110,B01000010,B01001001,B00100100,B00000000,B00000000,B00000001,B11111110,
B01000101,B01110110,B11000101,B11001000,B00000000,B00000000,B00000001,B11111110,
B00000000,B00000000,B00000110,B00011000,B00000000,B00000000,B00001101,B11111110,
B00000000,B00000000,B00000001,B11100000,B00000000,B00000000,B00001101,B11111110,
B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00001101,B11111110,
B00000000,B00000000,B00000000,B00000000,B00000000,B00000011,B10001111,B11111110,
B00000000,B00000000,B00000000,B00000000,B00000000,B00000001,B11001111,B11101010,
B00000000,B00000000,B00000000,B00000000,B00111000,B00001100,B11001111,B11110110,
B00000000,B00000000,B00000000,B00000000,B00110000,B00000111,B11111111,B11101010,
B00000000,B00000000,B00000000,B00000000,B00111100,B11111111,B11111111,B11111110,
B00000000,B00000000,B00000000,B00000000,B00011111,B11111111,B11111111,B11111110,
B00000000,B00000000,B00000000,B00000000,B00011111,B11111111,B11111111,B11111110,
B00000000,B00000000,B00000000,B00000000,B00011111,B11111111,B11111111,B11111100,
B00000000,B00000000,B00000000,B00000000,B00001111,B11111111,B11111111,B11111100,
B00000000,B00000000,B00000000,B00000000,B00000111,B11111111,B11111111,B11111000,
B00100100,B01001011,B10011001,B10010110,B00000111,B11111111,B11111100,B00000000,
B01010101,B01010101,B00001010,B01010010,B00001111,B10001111,B11111001,B11110000,
B01010011,B10001001,B00001101,B10010010,B00011111,B11111000,B01111011,B11111100,
B00000000,B00000000,B00000000,B00000000,B01111001,B11111111,B11110000,B00000000,
};

const byte logo2[] PROGMEM = {88,43,
B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B11000000,B00000000,B00000000,B00000000,B00000000,
B00000000,B00000000,B00001111,B11111111,B11111110,B00000001,B10001000,B00000010,B00000000,B00000000,B00000000,
B00000000,B00000011,B11111111,B11111111,B11111111,B00000011,B00011000,B11000110,B10000000,B00000000,B00000000,
B00000000,B00011111,B11111111,B11111111,B11111111,B10000110,B00110001,B10001101,B10000000,B00011100,B00000000,
B00000000,B01111111,B11111111,B11111111,B11111111,B10001110,B01100011,B10011011,B00000000,B01100000,B00000000,
B00000000,B11111111,B11111111,B11111111,B11111111,B10001100,B01000111,B00100000,B00110001,B11000000,B00000000,
B00000000,B11111111,B11111111,B11111111,B11111111,B10011000,B00111111,B00000000,B11110110,B00000011,B10000000,
B00000001,B11111100,B00011111,B11111111,B11111111,B10011000,B01111111,B11111111,B11100100,B00001111,B00000000,
B00000001,B11111100,B00011111,B11111111,B11111111,B10000000,B11110011,B11111111,B11000000,B01111110,B01100000,
B00000001,B11111100,B00011111,B11111111,B11111111,B10000011,B11100111,B11000000,B00000111,B11111001,B11110000,
B00000001,B11111100,B00011111,B11111111,B11111111,B00001111,B11001111,B11111111,B11111111,B11111111,B11110000,
B00000001,B11111111,B11111111,B11111111,B11111111,B00111100,B00111111,B11111111,B10000000,B00000000,B00000000,
B00000001,B11111111,B11111111,B11111111,B11111111,B00111111,B11111111,B00000011,B11111111,B11111111,B11110000,
B00000001,B11111111,B11111111,B11111111,B11111110,B00111011,B11111111,B11111111,B11111111,B11111111,B11110000,
B00000001,B11111111,B11111111,B11111111,B11111000,B01100010,B00000111,B11111111,B11111111,B11111111,B11110000,
B00000001,B11111111,B11111111,B11111111,B00000000,B11111111,B11111111,B11111100,B00000000,B00000000,B00000000,
B00000001,B11111111,B11111111,B11111100,B00011111,B10001111,B11111111,B11111111,B11111111,B11111111,B11110000,
B00000001,B11111111,B11111111,B11110000,B01111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11110000,
B00000001,B11111111,B11111111,B11110001,B11111100,B11111111,B11000000,B00000000,B00000000,B00000000,B00000000,
B00000001,B11111111,B11111111,B11100111,B10000111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000001,B11111111,B11111111,B11100111,B11111111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,
B00000011,B11111111,B11111111,B11100001,B11111110,B11111110,B00000000,B00011111,B11111111,B11111111,B11110000,
B00000011,B11111111,B11111111,B11100000,B00111111,B01111111,B11111111,B11111111,B11111111,B11111111,B11110000,
B00000111,B11111111,B11111111,B11111000,B00011111,B10011111,B11111111,B11111111,B11111111,B11111111,B11110000,
B00000111,B11111111,B11111111,B11111111,B11101111,B11111110,B00000000,B01111000,B00000000,B00000000,B01110000,
B00001111,B11111111,B11111111,B11111111,B11100111,B11111111,B11111111,B11111111,B11111111,B11111111,B11110000,
B00011111,B11111111,B11111111,B11111111,B11100011,B11110011,B11111111,B11111111,B11111111,B11111111,B11110000,
B00111111,B11111111,B11111111,B11111100,B00000011,B11111001,B11110001,B11100000,B01001111,B11111011,B10010000,
B11111111,B11111111,B11111111,B10000000,B00000001,B10111110,B01111110,B00111111,B00111000,B01111111,B11000000,
B11111111,B11111111,B11111111,B00000000,B00000001,B10011110,B01111111,B11111111,B00000110,B01111110,B11100000,
B11111111,B11111111,B11111111,B00000000,B00000001,B11011111,B00001111,B11110111,B11100011,B10001111,B11100000,
B11111111,B11111111,B11111111,B00000000,B00000001,B11001111,B10001011,B00111011,B11111100,B11000110,B01100000,
B11111111,B11111111,B11111111,B00000000,B00000000,B01100011,B11000001,B10011000,B11111111,B00000111,B00100000,
B11111111,B11111111,B11111111,B00000000,B00000000,B00110000,B11110000,B11000110,B00000111,B11000011,B00000000,
B11111111,B11111111,B11111111,B11111111,B10000000,B00011011,B00111000,B01100011,B00000000,B11100000,B00000000,
B11111111,B11111111,B11111111,B11111111,B11000000,B00001001,B10001100,B00100001,B11000000,B00000000,B00000000,
B11111111,B11111111,B11111111,B11111111,B11000000,B00001000,B10000110,B00010000,B01000000,B00000000,B00000000,
B11111111,B11111111,B11111111,B11111110,B11000000,B00001100,B11000010,B00000000,B00000000,B00000000,B00000000,
B11111111,B11111111,B11111111,B11100110,B11000000,B00000100,B01100011,B00000000,B00000000,B00000000,B00000000,
B11111111,B11111111,B11100000,B01100110,B00000000,B00000100,B00011000,B00000000,B00000000,B00000000,B00000000,
B11111111,B11111111,B11000000,B00110000,B00000000,B00000110,B00001100,B00000000,B00000000,B00000000,B00000000,
B11111111,B11111111,B11000000,B00000000,B00000000,B00000000,B00000110,B00000000,B00000000,B00000000,B00000000,
B11111111,B11111111,B11000000,B00000000,B00000000,B00000000,B00000010,B00000000,B00000000,B00000000,B00000000,
};

const byte logo[] PROGMEM = {64, 36,
                             B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
                             B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111110,
                             B10000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000010,
                             B10111111, B00111110, B00111011, B00110000, B11100011, B01100111, B00111101, B11111010,
                             B10111111, B00110011, B01101101, B11100001, B11110011, B01101101, B10110001, B11111010,
                             B10001100, B00110011, B01101100, B11000011, B00011011, B01101101, B10110000, B01100010,
                             B10001101, B10111110, B01111000, B11000011, B00011011, B01101111, B00011100, B01100010,
                             B10001101, B10110110, B01100001, B11100011, B00011011, B01101100, B01101100, B01100010,
                             B10001100, B00110111, B00111011, B00110001, B11110001, B11000111, B00111100, B01100010,
                             B10000000, B00000000, B00000000, B00000000, B11111000, B00000000, B00000000, B00000010,
                             B10000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000010,
                             B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111110,
                             B00000000, B00000000, B00000001, B11100000, B00000000, B00000000, B00000000, B00000000,
                             B00000000, B00000000, B00000110, B00011000, B00000000, B00000000, B00000000, B00000000,
                             B01110110, B01110110, B11000100, B11001000, B00011111, B11111110, B00000000, B00000000,
                             B01010101, B01100100, B10001001, B00100100, B01111111, B11110011, B11000000, B00000000,
                             B01110110, B01000010, B01001001, B11100100, B01111111, B11110011, B11000000, B00000000,
                             B01000101, B01110110, B11000101, B00101000, B01111111, B11111111, B11000000, B00000000,
                             B00000000, B00000000, B00000110, B00011000, B01111111, B11111111, B11000000, B00000000,
                             B00000000, B00000000, B00000001, B11100000, B01111111, B11111111, B11000000, B00000000,
                             B00000000, B00000000, B00000000, B00000000, B01111111, B11111111, B11000000, B00000000,
                             B00110000, B11111111, B00000001, B10000000, B01111111, B11111111, B11000000, B00000000,
                             B00110011, B11111111, B11111111, B10000000, B00000000, B11111111, B11000000, B00000000,
                             B00110011, B11111111, B11111111, B10000000, B00000111, B11111111, B11000000, B00000000,
                             B00110011, B11111110, B11000001, B10000000, B00000111, B11111111, B11000000, B00000000,
                             B00110011, B11111110, B11000001, B10000000, B00000000, B00011111, B11110000, B00000110,
                             B00111111, B11111111, B11111100, B00000000, B00000000, B00011111, B11111000, B00000110,
                             B00111111, B11111111, B11111100, B00000000, B00000001, B11111111, B11111111, B00011110,
                             B01111111, B11111111, B11111111, B10000000, B00000001, B11111111, B11111111, B00011110,
                             B01111111, B11111111, B11111111, B11100000, B00000001, B11111111, B11111111, B00011110,
                             B01111111, B11111111, B11111111, B11100000, B00000001, B00001111, B11111111, B11111110,
                             B01110011, B11100111, B11001111, B11100000, B00000000, B00001111, B11111111, B11111110,
                             B01110011, B11100111, B11001111, B11101001, B00010010, B11101111, B00110011, B01001110,
                             B01111111, B11111111, B11111111, B10010101, B01010101, B01000111, B10101101, B01101110,
                             B00111111, B11111111, B11111110, B00010100, B11100010, B01000011, B10010011, B01101000,
                             B00000000, B00000000, B00000000, B00000000, B00000000, B00000011, B11111111, B11111000,
                            };

const byte ray[] PROGMEM = {88, 16,
                            B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00010000, B00000000, B00000000, B00000100, B10000000,
                            B00000000, B00000000, B00000000, B00000000, B00001000, B01000010, B00000001, B00110011, B00100110, B01100010, B01010000,
                            B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00010010, B00011001, B10000001, B10000011, B01110000,
                            B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11110000,
                            B00000000, B00000000, B00000000, B00000000, B00100000, B01000000, B00001000, B00001111, B10001111, B10000000, B01110000,
                            B11110011, B11001111, B11101111, B10011111, B00011000, B00000001, B00000000, B10011000, B00111000, B11000111, B00110000,
                            B00000000, B00000000, B00000000, B00000010, B00000000, B00000100, B00000100, B00000001, B00010000, B00111001, B11110000,
                            B00000000, B00000000, B00000000, B00000000, B00000000, B00010000, B01010000, B00000001, B00000000, B00000000, B01110000,
                            B00000000, B00000000, B00000000, B00000000, B00000001, B00000000, B00000000, B00111001, B11001100, B11011000, B00110000,
                            B10011111, B11101111, B10111111, B10001111, B11110000, B00010000, B00000100, B11100000, B01110110, B01001111, B11110000,
                            B00000000, B00000000, B00000000, B00000000, B00000000, B00000010, B01000000, B00111100, B00011011, B11110001, B11110000,
                            B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11110000,
                            B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B01001000, B00011110, B00000111, B00001111, B11110000,
                            B00000000, B00000000, B00000000, B00000000, B00000000, B01001000, B00000000, B11110000, B00111100, B01111011, B10100000,
                            B00000000, B00000000, B00000010, B00000000, B00010000, B00000000, B01000011, B10000100, B01100000, B11000010, B01100000,
                            B00000000, B00000000, B00000000, B00000001, B00000000, B00010000, B00000100, B00000001, B11000000, B00000000, B01000000,
                           };

const byte trex1[] PROGMEM = {16, 16,
                              B00000000, B11111110,
                              B00000001, B10111111,
                              B00000001, B11111111,
                              B00000001, B11111111,
                              B00000001, B11110000,
                              B00000001, B11111100,
                              B10000011, B11100000,
                              B10000111, B11100000,
                              B11001111, B11111000,
                              B11111111, B11001000,
                              B11111111, B11000000,
                              B11111111, B11000000,
                              B01111111, B10000000,
                              B00111111, B10000000,
                              B00010001, B00000000,
                              B00011001, B10000000,
                             };

const byte trex1g[] PROGMEM = {16, 16,
                               B01111111, B00000000,
                               B11111101, B10000000,
                               B11111111, B10000000,
                               B11111111, B10000000,
                               B00001111, B10000000,
                               B00111111, B10000000,
                               B00000111, B11000001,
                               B00000111, B11100001,
                               B00011111, B11110011,
                               B00010011, B11111111,
                               B00000011, B11111111,
                               B00000011, B11111111,
                               B00000001, B11111110,
                               B00000001, B11111100,
                               B00000001, B00010000,
                               B00000011, B00110000,
                              };

const byte trex2[] PROGMEM = {16, 16,
                              B00000000, B11111110,
                              B00000001, B10111111,
                              B00000001, B11111111,
                              B00000001, B11111111,
                              B00000001, B11110100,
                              B00000001, B11111100,
                              B01000011, B11100000,
                              B01000111, B11100000,
                              B11001111, B11110000,
                              B11111111, B11010000,
                              B11111111, B11000000,
                              B11111111, B11000000,
                              B01111111, B11000000,
                              B00111111, B11000000,
                              B00001000, B01000000,
                              B00001100, B01100000,
                             };

const byte trex2g[] PROGMEM = {16, 16,
                               B01111111, B00000000,
                               B11111101, B10000000,
                               B11111111, B10000000,
                               B11111111, B10000000,
                               B00101111, B10000000,
                               B00111111, B10000000,
                               B00000111, B11000010,
                               B00000111, B11100010,
                               B00001111, B11110011,
                               B00001011, B11111111,
                               B00000011, B11111111,
                               B00000011, B11111111,
                               B00000011, B11111110,
                               B00000011, B11111100,
                               B00000010, B00010000,
                               B00000110, B00110000,
                              };

const byte pom[] PROGMEM = {16, 9,
                            B00000100, B00000000,
                            B00001000, B00000000,
                            B01111111, B00000000,
                            B11111110, B10000000,
                            B11111110, B10000000,
                            B11111111, B10000000,
                            B11111111, B10000000,
                            B01111111, B00000000,
                            B00111110, B00000000,
                           };

const byte fire0[] PROGMEM = {16, 16,
                              B00000000, B00000000,
                              B00000000, B00000000,
                              B01000000, B00000000,
                              B01001000, B00000000,
                              B10000000, B00000000,
                              B11010100, B00000000,
                              B10100000, B00000000,
                              B00010000, B00000000,
                              B11000100, B00000000,
                              B01000000, B00000000,
                              B00100000, B00000000,
                              B00000000, B00000000,
                              B00000000, B00000000,
                              B00000000, B00000000,
                              B00000000, B00000000,
                              B00000000, B00000000,
                             };

const byte fire0g[] PROGMEM = {16, 16,
                               B00000000, B00000000,
                               B00000000, B00000000,
                               B00000000, B00000010,
                               B00000000, B00010010,
                               B00000000, B00000001,
                               B00000000, B00101011,
                               B00000000, B00000101,
                               B00000000, B00001000,
                               B00000000, B00100011,
                               B00000000, B00000010,
                               B00000000, B00000100,
                               B00000000, B00000000,
                               B00000000, B00000000,
                               B00000000, B00000000,
                               B00000000, B00000000,
                               B00000000, B00000000,
                              };

const byte fire1[] PROGMEM = {16, 16,
                              B00000000, B00000000,
                              B00000000, B01100000,
                              B00000110, B00100000,
                              B00000010, B01000000,
                              B11110111, B10000000,
                              B11001110, B00000100,
                              B11001000, B11111000,
                              B01100101, B11000000,
                              B01111011, B00000000,
                              B00110010, B11001000,
                              B00010011, B00000000,
                              B00000101, B11000000,
                              B00000000, B10010000,
                              B00000000, B10000000,
                              B00000000, B00000000,
                              B00000000, B00000000,
                             };
const byte fire1g[] PROGMEM = {16, 16,
                               B00000000, B00000000,
                               B00000110, B00000000,
                               B00000100, B01100000,
                               B00000010, B01000000,
                               B00000001, B11101111,
                               B00100000, B01110011,
                               B00011111, B00010011,
                               B00000011, B10100110,
                               B00000000, B11011110,
                               B00010011, B01001100,
                               B00000000, B11001000,
                               B00000011, B10100000,
                               B00001001, B00000000,
                               B00000001, B00000000,
                               B00000000, B00000000,
                               B00000000, B00000000,
                              };
const byte fire2[] PROGMEM = {16, 16,
                              B00000000, B00000000,
                              B00000000, B01100000,
                              B00000110, B00101010,
                              B00011010, B01011110,
                              B11110111, B10110100,
                              B11011111, B11101100,
                              B11001100, B00011110,
                              B01101111, B11100000,
                              B01111111, B00111100,
                              B00110010, B10000110,
                              B00011111, B10110000,
                              B00101110, B00111100,
                              B00000101, B11111000,
                              B00000001, B10100100,
                              B00010001, B01000000,
                              B00000000, B00000000,
                             };
const byte fire2g[] PROGMEM = {16, 16,
                               B00000000, B00000000,
                               B00000110, B00000000,
                               B01010100, B01100000,
                               B01111010, B01011000,
                               B00101101, B11101111,
                               B00110111, B11111011,
                               B01111000, B00110011,
                               B00000111, B11110110,
                               B00111100, B11111110,
                               B01100001, B01001100,
                               B00001101, B11111000,
                               B00111100, B01110100,
                               B00011111, B10100000,
                               B00100101, B10000000,
                               B00000010, B10001000,
                               B00000000, B00000000,
                              };



const byte tank1[] PROGMEM = {16, 16,
                              B00000000, B00000000,
                              B00000000, B00000000,
                              B00000000, B00000000,
                              B00000000, B00000000,
                              B00000000, B00000000,
                              B00000000, B00000000,
                              B00000000, B00000000,
                              B10000111, B11000010,
                              B01001111, B11111110,
                              B01101111, B10100010,
                              B00111111, B11111000,
                              B01111111, B11111110,
                              B11111111, B11111111,
                              B11111111, B11111111,
                              B01110111, B01110110,
                              B00111111, B11111100,
                             };

const byte tank2[] PROGMEM = {16, 16,
                              B00000000, B00000000,
                              B00000000, B00000000,
                              B00000000, B00000000,
                              B00000000, B00000000,
                              B00000000, B00000000,
                              B00000000, B00000000,
                              B00000000, B00000000,
                              B00100111, B11000010,
                              B00101111, B11111110,
                              B00101111, B10100010,
                              B00111111, B11111000,
                              B01111111, B11111110,
                              B11111111, B11111111,
                              B11101110, B11101111,
                              B01111111, B11111110,
                              B00111111, B11111100,
                             };

const byte tank3[] PROGMEM = {16, 16,
                              B00000000, B00000000,
                              B00000000, B00000000,
                              B01100110, B00000000,
                              B00100100, B01000010,
                              B00110100, B01100110,
                              B00010101, B10100100,
                              B00010101, B01101100,
                              B00010111, B11011010,
                              B11010111, B11111110,
                              B01100101, B10100010,
                              B00110101, B10111110,
                              B01111001, B10001010,
                              B10101111, B10111011,
                              B11101110, B10101111,
                              B01111011, B10111110,
                              B00111111, B11111100,
                             };

const byte tank4[] PROGMEM = {16, 16,
                              B00000000, B00000000,
                              B00000000, B00000000,
                              B00100000, B00000010,
                              B00000010, B00000000,
                              B00000000, B00100000,
                              B00000100, B10000000,
                              B00000000, B00000100,
                              B00000000, B00000010,
                              B00100000, B00101010,
                              B00000100, B10000000,
                              B00000001, B00010110,
                              B00010100, B00000000,
                              B00001000, B10010010,
                              B01010110, B00000001,
                              B00001001, B00101010,
                              B00000000, B00000100,
                             };

const byte minipom[] PROGMEM = {8, 8,
                                B00001000,
                                B00011100,
                                B00100110,
                                B01000011,
                                B01001001,
                                B10011001,
                                B01011010,
                                B00110100,
                               };
const byte chily[] PROGMEM = {16, 9,
                              B00010000, B00000000,
                              B00001000, B00000000,
                              B00011100, B00000000,
                              B00111110, B00000000,
                              B00111010, B00000000,
                              B00111100, B00000000,
                              B00011100, B00000000,
                              B00011000, B00000000,
                              B00110000, B00000000,
                             };
const byte heart[] PROGMEM = {8, 8,
                              B00000000,
                              B01110110,
                              B11011111,
                              B10111111,
                              B11011111,
                              B01101110,
                              B00111100,
                              B00011000,
                             };

// array containing the different sprites
#define NUM_SPRITES 4
const byte* sprites[NUM_SPRITES] = {
  trex1, //0
  trex1g, //1
  trex2, //2
  trex2g, //3
};

#define NUM_TANK 4
const byte* tank[NUM_TANK] = {
  tank1, //0
  tank2, //1
  tank3, //2
  tank4, //3
};

#define NUM_FIRE 3
const byte* fire[NUM_FIRE] = {
  fire0, //0
  fire1, //1
  fire2, //2
};

#define NUM_FIRE 3
const byte* fireg[NUM_FIRE] = {
  fire0g, //0
  fire1g, //1
  fire2g, //2
};


// the setup routine runs once when Gamebuino starts up
void setup() {
  initGame();
  // initialize the Gamebuino object
  gb.begin();
  mainMenu();

  //display the main menu:

}

void initGame()
{
  barredevie=42;
  tankx = 0; // re init tank
  tanky = random(10, LCDHEIGHT - 8);   //re init tank y
  score = 0; // re init score
  puissance = 11; //re init puissance bar
  leveln=1;
  SpeedUp=1;
}


void mainMenu() {
  gb.titleScreen(F(""), logo);
  gb.pickRandomSeed();
  gb.battery.show = false;
}
void NextLevel()
{
  leveln++;
  SpeedUp++;
  loop();
}


// the loop routine runs over and over again forever
void loop() {
  //updates the gamebuino (the display, the sound, the auto backlight... everything)
  //returns true when it's time to render a new frame (20 times/second)

  if (gb.update()) {
    if (barredevie <= 59) {

        // exit game
      if (gb.buttons.pressed(BTN_C)) {
        setup();
      }
      
    //draw the field and barre de vie puissance
    gb.display.drawLine(0, 15, LCDWIDTH , 15);

    //barre de puissance
    gb.display.drawRect(LCDWIDTH - 30, 2, 20, 3);
    gb.display.drawLine(LCDWIDTH - 30, 3, LCDWIDTH - puissance , 3);

    // barre de vie
    gb.display.drawRect(LCDWIDTH - 60, 2, 20, 3);
    gb.display.drawLine(LCDWIDTH - 60, 3, LCDWIDTH - barredevie , 3);

    //emplacement du score
    gb.display.cursorX = 1;
    gb.display.cursorY = 0;
    gb.display.println(score);

    gb.display.drawBitmap(x, y, sprites[direc]);

    
    if (chilyrand == 5) {
      gb.display.drawBitmap(pomx, pomy, chily);
    }
    else {
      gb.display.drawBitmap(pomx, pomy, pom);
    }

    gb.display.drawBitmap(tankx, tanky, tank[tankstate]);
    gb.display.drawBitmap(LCDWIDTH - 69, 0, heart);
    gb.display.drawBitmap(LCDWIDTH - 39, 0, minipom);

    explode = 0;


    // ------- Controls  ----------------------------------------------

    if (gb.buttons.repeat(BTN_RIGHT, 1)) {

      if (x < LCDWIDTH - 16) {
        x = x + 1;
      }
      direc = direc + 2;
      if ( direc > 2) {
        direc = 0;
      }
    }
    if (gb.buttons.repeat(BTN_LEFT, 1)) {
      if (x > 0) {
        x = x - 1;
      }
      direc = direc + 2;
      if ( direc > 3) {
        direc = 1;
      }
    }
    if (gb.buttons.repeat(BTN_DOWN, 1)) {
      if (y < LCDHEIGHT - 8) {
        y = y + 1;
      }
    }
    if (gb.buttons.repeat(BTN_UP, 1)) {
      if (y > 6) {
        y = y - 1;
      }
    }

    if (gb.buttons.repeat(BTN_A, 1)) {
      if (puissance < 30) {
       puissance++; // ----------------------------->>>>fait baisser la barre de puissance
      }

      // ------------------------------------------------------------------

      // draw right fire ----------

      if (direc == 0 or direc == 2) {
        if (puissance < 29) {
          if(activateRay==0){   // if chily was NOT eaten 
          gb.display.drawBitmap(x + 17, y, fire[statefire]); // le feu n'est possible que si la barre de puissance n'est pas vide
          }
          if(activateRay==1){   // if chily was eaten
          gb.display.drawBitmap(x + 10, y - 4, ray, NOROT, FLIPH); // le feu n'est possible que si la barre de puissance n'est pas vide
          }
        }
        statefire = statefire + 1;
        if ( statefire > 2) {
          statefire = 0;
        }
      }

      // draw left fire ----------

      if (direc == 1 or direc == 3) {
        if (puissance < 30) {
          if(activateRay==1){   // if chily was eaten
            gb.display.drawBitmap(x - 81 , y - 4, ray);
          }
          if(activateRay==0){   // if chily was NOT eaten
            gb.display.drawBitmap(x - 17, y, fire[statefire], NOROT, FLIPH); // le feu n'est possible que si la barre de puissance n'est pas vide
          }
        }

        statefire = statefire + 1;
        if ( statefire > 2) {
          statefire = 0;
        }
      }
    }

    // when trex touch apple -----------------------------------

    if (gb.collideBitmapBitmap(x, y, sprites[direc], pomx, pomy, pom)) {
      
      score = score + 5;
      pomx = random(10, LCDWIDTH);
      pomy = random(20, LCDHEIGHT - 8);

      if(chilyrand==5){
        activateRay=1; // if chily is eaten activate ray
        RayOrFireHitBox=88;  // and change the hitbox of the fire
        puissance=11;  // power bar to the max with the chily
        }  
      if(chilyrand!=5){
        activateRay=0;  // if apple is eaten dont activate ray
        RayOrFireHitBox=16;  // and  the hitbox of the fire 
      } 
      
      chilyrand = random(1, 10);  // 1 chance / 10 to have a chily
      if (puissance > 11) {
        puissance = puissance - 4; //augmente la barre de puissance
        if (puissance < 11) {
          puissance = 11; // pour ne pas dépasser la barre de puissance
        }
      }
    }


    // when trex touch tank with HITBOX -----------------------------------
    if (gb.collideRectRect(x, y, 16, 2, tankx, tanky, 16, 2)) {
      if (barredevie < 60) {
        barredevie++; //fait baisser la barre de vie
      }
    }


    //     when trex burn tank -----------------------------------
    if (gb.buttons.repeat(BTN_A, 1)) {
      if (puissance < 30) { // le tank n'explose que si le boutton est appuillé ET que le feu crache, (donc que la barre de feu pas vide)
        if (gb.collideRectRect(x + 17, y + 16, RayOrFireHitBox, 2, tankx, tanky + 16, 16, 2)) { // si les HITBOX tank et fire se touchent
          if (direc == 0 || direc == 2) { // Si t rex vers la droite
            explode = 1;
            tankstate = 3;
            tankx = -16;
            tanky = random(10, LCDHEIGHT - 8);
            score = score + 10;
          }
        }
        if (gb.collideRectRect(x - 17, y + 16, RayOrFireHitBox, 2, tankx, tanky + 16, 16, 2)) { // si TREX est vers la gauche et que les HITBOX tank et fire se touchent
          if (direc == 1 || direc == 3) { // Si t rex vers la gauche
            explode = 1;
            tankstate = 3;
            tankx = -16;
            tanky = random(10, LCDHEIGHT - 8);
            score = score + 10;
          }
        }
      }
    }

    if (explode < 1) {
      if (tankx < LCDWIDTH) {
        tankx = tankx + 1*SpeedUp;
      }
      if (tankx > LCDWIDTH - 16) {
        tankx = -16;
        tanky = random(10, LCDHEIGHT - 8);   //re init tank y
      }
      tankstate = tankstate + 1;
      if (tankstate > 1) {
        tankstate = 0;
      }
    }
}

// GAME OVER
    if (barredevie > 59) {
      gb.display.clear();
      // gb.display.print(F("GAME OVER!"), 20);
      // ESSAYER DE FAIRE AFFICHER LE SCORE ET GAME OVER ------------------------------ TBD
      gb.display.print(F("Score: "));
      gb.display.print(score);
      gb.display.drawBitmap(10, 10, GAMEOVER);

         if (gb.buttons.repeat(BTN_B, 1)) {
            initGame();
         }
    }

// Next level
    if (score >= 100*leveln) {
       
      gb.display.clear();
      gb.display.print(F("LEVEL: "));
      gb.display.print(leveln);
      gb.display.drawBitmap(0, 5, logo2);
         if (gb.buttons.repeat(BTN_B, 1)) {
           NextLevel();
         }
    }
      
    
  }  // void gb.update
} // void loop
